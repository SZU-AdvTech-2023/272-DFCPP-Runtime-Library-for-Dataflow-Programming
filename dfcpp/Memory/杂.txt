// namespace D_Memory{

// /* 
//     每个numa结点上都有一个内存分配器    

// */
// class MemoryAllocator {
    
// public:
//     MemoryAllocator() = default;
//     ~MemoryAllocator() = default;

//     void* allocate(size_t size);
//     void deallocate(void* ptr);
// };

// // 外部分配的接口
// void* MemoryAllocator::allocate(size_t size) {
//     // 这里的步骤是 要先从线程本地缓存找，由于这里是全局的，所以每个线程都能执行到这里
//     // 也就是说，我们能拿到每个线程的id，然后根据id去找到对应的线程本地缓存
//     // 本地缓存没有的话，就去看看有没有本地的超级块
//         // 还是没有的话，就去全局那里看看
//         // 全局都没有的话，就申请一个本地的超级块

//     // 所以，这个分配器应该有的成员应该是？
//     // 缓存队列指针数组
//     // 本地堆指针数组

//     return NULL;
// }
// }